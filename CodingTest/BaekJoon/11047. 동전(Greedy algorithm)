/*
문제
준규가 가지고 있는 동전은 총 N종류이고, 각각의 동전을 매우 많이 가지고 있다.

동전을 적절히 사용해서 그 가치의 합을 K로 만들려고 한다. 이때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 10, 1 ≤ K ≤ 100,000,000)

둘째 줄부터 N개의 줄에 동전의 가치 Ai가 오름차순으로 주어진다. (1 ≤ Ai ≤ 1,000,000, A1 = 1, i ≥ 2인 경우에 Ai는 Ai-1의 배수)

출력
첫째 줄에 K원을 만드는데 필요한 동전 개수의 최솟값을 출력한다.

입력 예제
10 4200
1
5
10
50
100
500
1000
5000
10000
50000

출력 예제
6

입력 예제
10 4790
1
5
10
50
100
500
1000
5000
10000
50000


출력 예제
12
*/

#include <iostream>
#include <algorithm>

int main()
{
  int N, K; // 동전 종류 N, 값의 합 K
  
  std::cin >> N >> K;
  
  int value[10]; // 동전 값 value
  
  for(int i=0; i<N; i++)
  {
    std::cin >> value[i];
  }
  
  std::sort(value, value + N);
  
  int result = 0; // 동전의 개수
  for(int i=N-1; i>=0; i--)// 큰 수부터
  {
    if(K == 0)
    {
      break;
    }
    result = result + K/value[i]; // 몫 더하기
    K = K % value[i]; // 나머지
  }
  
  std::cout << result;
  
  return 0;
}
